app Assistant {
  wasp: {
    version: "^0.12.3"
  },
  title: "Assistant",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id            Int            @id @default(autoincrement())
    conversations Conversation[]
psl=}

entity Conversation {=psl
    id       Int    @id @default(autoincrement())
    question String
    response String
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
psl=}

action createConversation {
  fn: import { createConversation } from "@src/actions.js",
  entities: [Conversation]
}

query getConversations {
  fn: import { getConversations } from "@src/queries.js",
  entities: [Conversation]
}

route ChatRoute { path: "/", to: ChatPage }
page ChatPage {
  component: import ChatPage from "@src/pages/Chat.jsx",
  authRequired: true
}